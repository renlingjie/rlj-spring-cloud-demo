spring.application.name=stream-retry
server.port=63210

# RabbitMQ\u8FDE\u63A5\u5B57\u7B26\u4E32
spring.rabbitmq.host=192.168.218.4
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=123



# \u5C40\u90E8\u5F02\u5E38\u91CD\u8BD5\u914D\u7F6E\uFF0C\u5373\u914D\u7F6E\u67D0\u4E2A\u6307\u5B9A\u901A\u9053(\u8FD9\u91CC\u5373\u8F93\u5165\u901A\u9053retry-consumer)\u7684\u5F02\u5E38\u91CD\u8BD5\u7B56\u7565
# \u91CD\u8BD5\u76F8\u5173\u914D\u7F6E\u7684\u524D\u7F00\u5747\u4E3Aspring.cloud.stream.bindings.<channelName>.consumer

# 1\u3001\u5C06\u4E24\u4E2A\u4FE1\u9053\u7ED1\u5B9A\u5230\u540C\u4E00\u4E2ATopic--retry-topic\u4E0A\uFF0C\u4E4B\u540E\u751F\u4EA7\u8005\u4F1A\u53D1\u9001\u6D88\u606F\u5230retry-topic\uFF0C\u6D88\u8D39\u8005\u4E5F\u4F1A\u4ECEretry-topic\u53BB\u6D88\u8D39\u6D88\u606F
spring.cloud.stream.bindings.retry-consumer.destination=retry-topic
spring.cloud.stream.bindings.retry-producer.destination=retry-topic
# 2\u3001\u5F53\u6D88\u606F\u6D88\u8D39\u5931\u8D25\u65F6\uFF0C\u5C1D\u8BD5\u6D88\u8D39\u8BE5\u6D88\u606F\u7684\u6700\u5927\u6B21\u6570\uFF0C\u9ED8\u8BA43\uFF0C\u5373\u6D88\u606F\u6D88\u8D39\u5931\u8D25\u540E\uFF0C\u53D1\u5E03\u8005\u4F1A\u91CD\u65B0\u6295\u90123\u6B21
spring.cloud.stream.bindings.retry-consumer.consumer.max-attempts=6
# 3\u3001\u6D88\u606F\u6D88\u8D39\u5931\u8D25\u540E\u91CD\u8BD5\u6D88\u8D39\u6D88\u606F\u7684\u521D\u59CB\u5316\u95F4\u9694\u65F6\u95F4\u3002\u9ED8\u8BA41s\uFF0C\u5373\u7B2C\u4E00\u6B21\u91CD\u8BD5\u6D88\u8D39\u4F1A\u57281s\u540E\u8FDB\u884C
spring.cloud.stream.bindings.retry-consumer.consumer.back-off-initial-interval=1000
# 4\u3001\u76F8\u90BB\u4E24\u6B21\u91CD\u8BD5\u4E4B\u95F4\u7684\u95F4\u9694\u65F6\u95F4\u7684\u500D\u6570\u3002\u9ED8\u8BA42\uFF0C\u5373\u7B2C\u4E8C\u6B21\u662F\u7B2C\u4E00\u6B21\u95F4\u9694\u65F6\u95F4\u76842\u500D\uFF0C\u7B2C\u4E09\u6B21\u662F\u7B2C\u4E8C\u6B21\u76842\u500D
spring.cloud.stream.bindings.retry-consumer.consumer.back-off-multiplier=2
# 5\u3001\u4E0B\u4E00\u6B21\u5C1D\u8BD5\u91CD\u8BD5\u7684\u6700\u5927\u65F6\u95F4\u95F4\u9694\uFF0C\u9ED8\u8BA4\u4E3A10000ms\uFF0C\u537310s
spring.cloud.stream.bindings.retry-consumer.consumer.back-off-max-interval=10000

# \u5168\u5C40\u5F02\u5E38\u91CD\u8BD5\u914D\u7F6E
# 1\u3001\u5C06\u4E24\u4E2A\u4FE1\u9053\u7ED1\u5B9A\u5230\u540C\u4E00\u4E2ATopic--requeue-topic\u4E0A\uFF0C\u4E4B\u540E\u751F\u4EA7\u8005\u4F1A\u53D1\u9001\u6D88\u606F\u5230requeue-topic\uFF0C\u6D88\u8D39\u8005\u4E5F\u4F1A\u4ECErequeue-topic\u53BB\u6D88\u8D39\u6D88\u606F
spring.cloud.stream.bindings.requeue-consumer.destination=requeue-topic
spring.cloud.stream.bindings.requeue-producer.destination=requeue-topic
# 2\u3001\u4EC5\u5BF9\u5F53\u524Drequeue-consumer\u901A\u9053\u5F00\u542F\u91CD\u65B0\u5165\u961F
spring.cloud.stream.rabbit.bindings.requeue-consumer.consumer.requeue-rejected=false
# 3\u3001\u5982\u679C\u662F\u5168\u90E8\u7684\u901A\u9053\u5747\u60F3\u8981\u5F00\u542F\u91CD\u65B0\u5165\u961F\uFF0C\u5219\u5C06\u4E0A\u9762\u7684\u6CE8\u91CA\uFF0C\u76F4\u63A5\u7528\u4E0B\u9762\u7684\uFF1A
# spring.rabbitmq.listener.direct.default-requeue-rejected=true
# 4\u3001\u4F1A\u548C\u5C40\u90E8\u7684\u6709\u51B2\u7A81\uFF0C\u56E0\u4E3A\u5931\u8D25\u540E\u5C31\u4E0D\u80FD\u5C40\u90E8(\u672C\u5730)\u91CD\u8BD5\u4E86\uFF0C\u8981\u7ACB\u523B\u5165\u961F\uFF0C\u6240\u4EE5\u5C06\u5BF9\u5E94\u901A\u9053(\u4E5F\u5C31\u662F\u8981\u5168\u5C40\u91CD\u8BD5\u7684\u901A\u9053)\u7684\u91CD\u8BD5\u6B21\u6570\u8BBE\u7F6E\u4E3A1(\u4E0D\u91CD\u8BD5)
spring.cloud.stream.bindings.requeue-consumer.consumer.max-attempts=1
# 5\u3001\u8FD8\u8981\u914D\u7F6E\u6D88\u8D39\u7EC4\uFF0C\u5426\u5219\u91CD\u8BD5\u7684\u6D88\u606F\u6BCF\u6B21\u90FD\u4F1A\u88AB\u6240\u6709\u7684\u6D88\u8D39\u8005\u90FD\u6D88\u8D39\u4E00\u904D
spring.cloud.stream.bindings.requeue-consumer.group=Group-requeue


# \u6B7B\u4FE1\u914D\u7F6E
# 1\u3001\u5C06\u4E24\u4E2A\u4FE1\u9053\u7ED1\u5B9A\u5230\u540C\u4E00\u4E2ATopic--deadletter-consumer\u4E0A\uFF0C\u4E4B\u540E\u751F\u4EA7\u8005\u751F\u4EA7\u6D88\u606F\u5230\u6B64\u4E0A\u3001\u6D88\u8D39\u8005\u4ECE\u6B64\u5904\u83B7\u53D6\u6D88\u606F
spring.cloud.stream.bindings.deadletter-consumer.destination=deadletter-topic
spring.cloud.stream.bindings.deadletter-producer.destination=deadletter-topic
# 2\u3001\u5F53\u6D88\u606F\u6D88\u8D39\u5931\u8D25\u65F6\uFF0C\u5C1D\u8BD5\u6D88\u8D39\u8BE5\u6D88\u606F\u7684\u6700\u5927\u6B21\u6570
spring.cloud.stream.bindings.deadletter-consumer.consumer.max-attempts=3
# 3\u3001\u8FD8\u8981\u914D\u7F6E\u6D88\u8D39\u7EC4\uFF0C\u5426\u5219\u91CD\u8BD5\u7684\u6D88\u606F\u6BCF\u6B21\u90FD\u4F1A\u88AB\u6240\u6709\u7684\u6D88\u8D39\u8005\u90FD\u6D88\u8D39\u4E00\u904D
spring.cloud.stream.bindings.deadletter-consumer.group=Group-deadletter
# 4\u3001\u6DFB\u52A0\u5982\u4E0B\u914D\u7F6E\u540E\uFF0C\u9879\u76EE\u542F\u52A8\u7684\u65F6\u5019\u5C31\u4F1A\u5F80RabbitMQ\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u6B7B\u4FE1\u961F\u5217deadletter-consumer(\u540D\u5B57\u9ED8\u8BA4\u4E3ATopic.dlq)
spring.cloud.stream.rabbit.bindings.deadletter-consumer.consumer.auto-bind-dlq=true


# \u964D\u7EA7Fallback\u914D\u7F6E
# 1\u3001\u5C06\u4E24\u4E2A\u4FE1\u9053\u7ED1\u5B9A\u5230\u540C\u4E00\u4E2ATopic--fallback-consumer\u4E0A\uFF0C\u4E4B\u540E\u751F\u4EA7\u8005\u751F\u4EA7\u6D88\u606F\u5230\u6B64\u4E0A\u3001\u6D88\u8D39\u8005\u4ECE\u6B64\u5904\u83B7\u53D6\u6D88\u606F
spring.cloud.stream.bindings.fallback-consumer.destination=fallback-topic
spring.cloud.stream.bindings.fallback-producer.destination=fallback-topic
# 2\u3001\u5F53\u6D88\u606F\u6D88\u8D39\u5931\u8D25\u65F6\uFF0C\u5C1D\u8BD5\u6D88\u8D39\u8BE5\u6D88\u606F\u7684\u6700\u5927\u6B21\u6570
spring.cloud.stream.bindings.fallback-consumer.consumer.max-attempts=3
# 3\u3001\u8FD8\u8981\u914D\u7F6E\u6D88\u8D39\u7EC4\uFF0C\u5426\u5219\u91CD\u8BD5\u7684\u6D88\u606F\u6BCF\u6B21\u90FD\u4F1A\u88AB\u6240\u6709\u7684\u6D88\u8D39\u8005\u90FD\u6D88\u8D39\u4E00\u904D
spring.cloud.stream.bindings.fallback-consumer.group=Group-fallback
# 4\u3001@ServiceActivator\u9700\u8981\u7ED1\u5B9A\u4E00\u4E2AChannel\u540D\uFF0C\u81EA\u52A8\u4E3A\u6211\u4EEC\u751F\u6210\u7684\u4FE1\u9053\u540D\u4E3A\uFF1A\u4E3B\u9898.\u6D88\u8D39\u7EC4.errors
# \u4E5F\u5C31\u662Ffallback-topic.Group-fallback.errors

# \u66B4\u9732\u6240\u6709actuator\u63A5\u53E3\uFF0C\u4E14\u4E0D\u9700\u8981security\u68C0\u67E5
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always